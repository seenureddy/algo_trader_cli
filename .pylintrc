[MASTER]
# ignore=templates

[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
# C0102: Black listed name "__author__" (blacklisted-name)
# C0111: Don't require docstrings on every method
# E252:  missing whitespace around parameter equals
# W0511: TODOs in code comments are fine.
# W0142: *args and **kwargs are fine.
# W0223: abstract methods don't need to be overwritten (i.e. when overwriting a Django REST serializer)
# W0622: Redefining id is fine.
# R0901: Too many ancestors (i.e. when subclassing test classes)
# R0801: Similar lines in files
# I0011: Informational: locally disabled pylint
# I0013: Informational: Ignoring entire file
# C1801: Do not use `len(SEQUENCE)` to determine if a sequence is empty
# E1120: No value for argument %s in %s call Used when a function call passes too few arguments
# W0603: Global Statement
# R0201: Method could be a function
# W0702: Bare exception
# C0302: Too many lines
# W0611: (unused-import)
# W1508: (invalid-envvar-default)
# E0401: (import-error)
# W1505: (deprecated-method)
# W0703: (broad-except)
# I1101: (c-extension-no-member)
# F401:  imported but unused
# F811:  redefinition imported but unused
# R1705: Unnecessary "elif" after "return" (no-else-return)
# R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
# R1720: Unnecessary "elif" after "raise" (no-else-raise)
# W1202: Use % formatting in logging functions and pass the % parameters as arguments (logging-format-interpolation)
# W0102: Dangerous default value {} as argument (dangerous-default-value)
# W605: invalid escape sequence '\c'
# C0301: Line too long (156/120) (line-too-long)
disable=C0102,C0111,C0301,W0102,W0511,W0142,W0622,W0223,W0212,W1202,R0901,R0801,I0011,I0013,anomalous-backslash-in-string,C1801,E1120,E1101,W0603,R0201,W0702,W0613,C0302,C0103,W0611,W1508,E0401,W1505,W0703,I1101,F401,F811,C0305,W0107,W0621,C0326,R1705,R1710,E252,R1720,W605


[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,input


good-names=e,je,i,do,logger
# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata, __author__

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,60}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{2,60}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,60}$

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[DESIGN]

max-public-methods=100
min-public-methods=0
max-branches=20
max-statements=80
# Maximum number of attributes of a class
max-attributes=15
max-args=15
max-locals=30
